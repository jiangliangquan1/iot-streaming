// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"github.com/jiangliangquan1/iot-streaming/authorization/user-auth"
	"github.com/jiangliangquan1/iot-streaming/basisdata/devices"
	"github.com/jiangliangquan1/iot-streaming/database"
	"github.com/jiangliangquan1/iot-streaming/logger"
	"github.com/jiangliangquan1/iot-streaming/repository"
	"github.com/jiangliangquan1/iot-streaming/viperex"
	"github.com/jiangliangquan1/iot-streaming/webapi"
	"github.com/jiangliangquan1/iot-streaming/zlwebhook"
)

// Injectors from wire.go:

func InitializeApp(configfile string) App {
	option := ProvideViperExOption(configfile)
	viperEx := viperex.NewViperEx(option)
	configOptions := ProvideLoggerConfigOption(viperEx)
	logrusLogger := logger.NewLogger(configOptions)
	jwtManager := userauth.NewJwtManager()
	connectOptions := ProvideDatabaseConnectOptions(viperEx)
	db := database.NewDataBase(connectOptions, logrusLogger)
	userRepository := repository.NewUserRepository(db)
	userAuthInterceptor := userauth.NewUserAuthInterceptor(logrusLogger, jwtManager, userRepository)
	webApiConfigurer := NewWebApiConfigurer(logrusLogger, userAuthInterceptor)
	webApiServerOption := ProvideWebApiServerOption(viperEx, webApiConfigurer)
	zlWebHookController := zlwebhook.NewZlWebHookController(logrusLogger)
	deviceRepository := repository.NewDeviceRepository(db)
	deviceService := devices.NewDeviceService(deviceRepository, logrusLogger)
	deviceController := devices.NewDeviceController(logrusLogger, deviceService)
	userService := userauth.NewUserService(userRepository, logrusLogger, jwtManager)
	userController := userauth.NewUserController(userService)
	v := ProvideApiControllers(zlWebHookController, deviceController, userController)
	iWebApiServer := webapi.NewWebApiServer(webApiServerOption, logrusLogger, v)
	app := NewIotStreamingApp(iWebApiServer)
	return app
}

// wire.go:

var ProviderSet = wire.NewSet(
	ProvideViperExOption, viperex.NewViperEx, ProvideLoggerConfigOption, logger.NewLogger, NewWebApiConfigurer,
	ProvideWebApiServerOption, zlwebhook.NewZlWebHookController, devices.NewDeviceController, webapi.NewWebApiServer, ProvideApiControllers,
	ProvideDatabaseConnectOptions, database.NewDataBase, repository.NewDeviceRepository, repository.NewUserRepository, userauth.NewUserService, userauth.NewUserController, userauth.NewJwtManager, userauth.NewUserAuthInterceptor, devices.NewDeviceService, NewIotStreamingApp,
)
